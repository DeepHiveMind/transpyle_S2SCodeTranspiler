sudo: required
language: python
os: linux
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - ant
      - gcc-7
      - gfortran-7
      - g++-7
      - swig
python:
  - "3.5"
  - "3.6"

matrix:
  include:
    - os: linux
      dist: xenial
      sudo: true
      language: python
      python: "3.7"
  allow_failures:
    - python: "3.7"

env:
  - TRAVIS_JDK_VERSION=oraclejdk9

before_install:
  - sudo update-alternatives --list cc
  - sudo update-alternatives --list c++
  - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-7 70
  - sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-7 70
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 70 --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-7 --slave /usr/bin/gcc-nm gcc-nm /usr/bin/gcc-nm-7 --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-7
  - sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-7 70
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 70
  - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-7 70
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 70 --slave /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-7 --slave /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-7
  - gcc --version
  - g++ --version
  - gfortran --version
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew update
      brew install pyenv || brew upgrade pyenv
      pyenv install "${TRAVIS_PYTHON_VERSION}"
      export PATH="$HOME/.pyenv/versions/${TRAVIS_PYTHON_VERSION}/bin:${PATH}"
      brew install ant || brew upgrade ant
    fi
    set +e
  - |
    set -e
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${TRAVIS_PYTHON_VERSION}" != "3.7" ]]; then
      jdk_switcher use $TRAVIS_JDK_VERSION
    fi
    set +e
  # Open Fortran Compiler
  - git clone "https://github.com/codethinklabs/ofc" "../open-fortran-compiler"
  - |
    set -e
    cd "../open-fortran-compiler"
    CFLAGS="-Wno-implicit-fallthrough -Wno-maybe-uninitialized" make
    cd -
    set +e
  - export PATH="${PATH}:$(pwd)/../open-fortran-compiler"
  # FFB-MINI app
  - git clone "https://github.com/mbdevpl/ffb-mini" "../ffb-mini"
  # miranda_io app
  - git clone "https://github.com/mbdevpl/miranda_io" "../miranda_io"

install:
  - pip install -U pip
  # CastXML
  - |
    set -e
    git clone "https://github.com/CastXML/CastXML" "../CastXML"
    cd "../CastXML"
    cmake .
    make
    export PATH="$(pwd)/bin:${PATH}"
    cd -
    set +e
  # use OFP XML from repo
  - |
    set -e
    git clone "https://github.com/mbdevpl/open-fortran-parser-xml" "../open-fortran-parser-xml"
    cd "../open-fortran-parser-xml"
    pip install -U -r dev_requirements.txt
    python -m open_fortran_parser --dev-deps
    ant
    python setup.py bdist_wheel
    pip install -U dist/*.whl
    cd -
    set +e
  - pip install -U -r dev_requirements.txt

script:
  - TEST_PACKAGING=1 TEST_LONG=1 python -m coverage run --branch --source . -m unittest --verbose

after_success:
  - python -m coverage report --show-missing
  - codecov

notifications:
  slack:
    secure: "IJLucZng9JvlxZY6jm17YZ1Ehy528T47Gsz3ztYpZlZIvPCfprGPSK7Cj0kOQRpsSBw73aWXt+f9akggq81seQZabSahI/Lun5vKaoasuNveUElbnw0bsQRrpUyFrWH1pYQndxd6Rpd2YOek6fxS0+PbVoX4Gwg3Z7EDgfaL5MWdlmkEkUdwsZzSK+zmJyEWkWHeyCYd29760gRK85bzTBG/Y/yDrxS7xUnU5OgiUHg5U6LKfyoWKwSW0o2ljkCs72/xSVwYqPNg5MEixExfvmQgElnsp2Bn/KJcPa6HZYnTTsL1d0TBC59C3imRkSZztR1Fmg39r72Lq0W0EMdwJzTKwlGgYxdPuCfCdkM+rhmlOHjYwq56oWBOu+jT8vVbgNsxeFAEmqwtLJ7b7K4OCkiyFwdGWy9DvbJ2vhq4hwjRCMfXVDpTmgP7fNj8Tc05ZpnM8gwk9w54/Vv0taYFguocgj7VbNpJfl2cnQbRG3Zj/AQ5vtmkhDnU/0mDQ4j4lOQuuJ+BeJ0p6qEl1JVGYDRXBg/YfRdRR0uT/wY1gZNQwJ7byrgC0Al+WrRTXkB6ds9+/JlP5o9la7BImtaMOkUBkPCTg0XsRZ/aVTAHMPSrSrOxUXl4imTJHg7R75EYvtXo5aEnPLMorJldaZfTyZFLhf2nnYQ4K4WX3Cm8uQI="
  email: false
